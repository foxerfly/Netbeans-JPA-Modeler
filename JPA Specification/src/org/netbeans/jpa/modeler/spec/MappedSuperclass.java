//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2014.01.21 at 01:52:19 PM IST
//
package org.netbeans.jpa.modeler.spec;

import javax.lang.model.element.TypeElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.netbeans.jpa.modeler.spec.extend.CompositePrimaryKeyType;
import org.netbeans.jpa.modeler.spec.extend.IAttributes;
import org.netbeans.jpa.modeler.spec.extend.JavaClass;
import org.netbeans.jpa.modeler.spec.extend.PrimaryKeyContainer;
import org.netbeans.jpa.source.JavaSourceParserUtil;
import org.netbeans.modeler.core.NBModelerUtil;

/**
 *
 *
 * Defines the settings and mappings for a mapped superclass. Is allowed to be
 * sparsely populated and used in conjunction with the annotations.
 * Alternatively, the metadata-complete attribute can be used to indicate that
 * no annotations are to be processed If this is the case then the defaulting
 * rules will be recursively applied.
 *
 * @Target(TYPE) @Retention(RUNTIME) public @interface MappedSuperclass{}
 *
 *
 *
 * <p>
 * Java class for mapped-superclass complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="mapped-superclass">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="id-class" type="{http://java.sun.com/xml/ns/persistence/orm}id-class" minOccurs="0"/>
 *         &lt;element name="exclude-default-listeners" type="{http://java.sun.com/xml/ns/persistence/orm}emptyType" minOccurs="0"/>
 *         &lt;element name="exclude-superclass-listeners" type="{http://java.sun.com/xml/ns/persistence/orm}emptyType" minOccurs="0"/>
 *         &lt;element name="entity-listeners" type="{http://java.sun.com/xml/ns/persistence/orm}entity-listeners" minOccurs="0"/>
 *         &lt;element name="pre-persist" type="{http://java.sun.com/xml/ns/persistence/orm}pre-persist" minOccurs="0"/>
 *         &lt;element name="post-persist" type="{http://java.sun.com/xml/ns/persistence/orm}post-persist" minOccurs="0"/>
 *         &lt;element name="pre-remove" type="{http://java.sun.com/xml/ns/persistence/orm}pre-remove" minOccurs="0"/>
 *         &lt;element name="post-remove" type="{http://java.sun.com/xml/ns/persistence/orm}post-remove" minOccurs="0"/>
 *         &lt;element name="pre-update" type="{http://java.sun.com/xml/ns/persistence/orm}pre-update" minOccurs="0"/>
 *         &lt;element name="post-update" type="{http://java.sun.com/xml/ns/persistence/orm}post-update" minOccurs="0"/>
 *         &lt;element name="post-load" type="{http://java.sun.com/xml/ns/persistence/orm}post-load" minOccurs="0"/>
 *         &lt;element name="attributes" type="{http://java.sun.com/xml/ns/persistence/orm}attributes" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="class" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="access" type="{http://java.sun.com/xml/ns/persistence/orm}access-type" />
 *       &lt;attribute name="metadata-complete" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "mapped-superclass", propOrder = {
    "description",
    "idClass",
    "excludeDefaultListeners",
    "excludeSuperclassListeners",
    "entityListeners",
    "prePersist",
    "postPersist",
    "preRemove",
    "postRemove",
    "preUpdate",
    "postUpdate",
    "postLoad",
    "attributes"
})
public class MappedSuperclass extends JavaClass implements PrimaryKeyContainer {

    protected String description;
    @XmlElement(name = "id-class")
    protected IdClass idClass;
    @XmlElement(name = "exclude-default-listeners")
    protected EmptyType excludeDefaultListeners;//RENENG PENDING
    @XmlElement(name = "exclude-superclass-listeners")
    protected EmptyType excludeSuperclassListeners;//RENENG PENDING
    @XmlElement(name = "entity-listeners")
    protected EntityListeners entityListeners;//RENENG PENDING
    @XmlElement(name = "pre-persist")
    protected PrePersist prePersist;//RENENG PENDING
    @XmlElement(name = "post-persist")
    protected PostPersist postPersist;//RENENG PENDING
    @XmlElement(name = "pre-remove")
    protected PreRemove preRemove;//RENENG PENDING
    @XmlElement(name = "post-remove")
    protected PostRemove postRemove;//RENENG PENDING
    @XmlElement(name = "pre-update")
    protected PreUpdate preUpdate;//RENENG PENDING
    @XmlElement(name = "post-update")
    protected PostUpdate postUpdate;//RENENG PENDING
    @XmlElement(name = "post-load")
    protected PostLoad postLoad;//RENENG PENDING
    protected Attributes attributes;
    @XmlAttribute(name = "class", required = true)
    protected String clazz;
    @XmlAttribute
    protected AccessType access;
    @XmlAttribute(name = "metadata-complete")
    protected Boolean metadataComplete;//RENENG PENDING
    @XmlAttribute
    private CompositePrimaryKeyType compositePrimaryKeyType;//custom added
    @XmlAttribute
    private String compositePrimaryKeyClass;//custom added

    public void load(EntityMappings entityMappings, TypeElement element, boolean fieldAccess) {
//        AnnotationMirror annotationMirror = JavaSourceParserUtil.getAnnotation(element, "javax.persistence.MappedSuperclass");
        if (entityMappings.findMappedSuperclass(element.getSimpleName().toString()) == null) {
            TypeElement superClassElement = JavaSourceParserUtil.getSuperclassTypeElement(element);
            if (!superClassElement.getQualifiedName().toString().equals("java.lang.Object")) {
                if (JavaSourceParserUtil.isEntityClass(superClassElement)) {
                    org.netbeans.jpa.modeler.spec.Entity entitySuperclassSpec = new org.netbeans.jpa.modeler.spec.Entity();
                    entitySuperclassSpec.load(entityMappings, superClassElement, fieldAccess);
                    super.setSuperclass(entitySuperclassSpec.getClazz());
                    super.setSuperclassId(entitySuperclassSpec.getId());
                    entityMappings.addEntity(entitySuperclassSpec);
                } else if (JavaSourceParserUtil.isMappedSuperClass(superClassElement)) {
                    org.netbeans.jpa.modeler.spec.MappedSuperclass mappedSuperclassSpec = new org.netbeans.jpa.modeler.spec.MappedSuperclass();
                    mappedSuperclassSpec.load(entityMappings, superClassElement, fieldAccess);
                    super.setSuperclass(mappedSuperclassSpec.getClazz());
                    super.setSuperclassId(mappedSuperclassSpec.getId());
                    entityMappings.addMappedSuperclass(mappedSuperclassSpec);
                } else {
                    //Skip
                }
            }
            this.setId(NBModelerUtil.getAutoGeneratedStringId());
            this.idClass = IdClass.load(element);
            this.getAttributes().load(entityMappings, element, fieldAccess);
            this.clazz = element.getSimpleName().toString();
            this.access = AccessType.load(element);

            if (this.getAttributes().getEmbeddedId() != null) {
                this.setCompositePrimaryKeyClass(this.getAttributes().getEmbeddedId().getAttributeType());
                this.setCompositePrimaryKeyType(CompositePrimaryKeyType.EMBEDDEDID);
            } else if (idClass != null) {
                this.setCompositePrimaryKeyClass(this.getIdClass().getClazz());
                this.setCompositePrimaryKeyType(CompositePrimaryKeyType.IDCLASS);
            } else {
                this.setCompositePrimaryKeyClass(null);
                this.setCompositePrimaryKeyType(null);
            }
        }
    }

    /**
     * Gets the value of the description property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the idClass property.
     *
     * @return possible object is {@link IdClass }
     *
     */
    public IdClass getIdClass() {
        return idClass;
    }

    /**
     * Sets the value of the idClass property.
     *
     * @param value allowed object is {@link IdClass }
     *
     */
    public void setIdClass(IdClass value) {
        this.idClass = value;
    }

    /**
     * Gets the value of the excludeDefaultListeners property.
     *
     * @return possible object is {@link EmptyType }
     *
     */
    public EmptyType getExcludeDefaultListeners() {
        return excludeDefaultListeners;
    }

    /**
     * Sets the value of the excludeDefaultListeners property.
     *
     * @param value allowed object is {@link EmptyType }
     *
     */
    public void setExcludeDefaultListeners(EmptyType value) {
        this.excludeDefaultListeners = value;
    }

    /**
     * Gets the value of the excludeSuperclassListeners property.
     *
     * @return possible object is {@link EmptyType }
     *
     */
    public EmptyType getExcludeSuperclassListeners() {
        return excludeSuperclassListeners;
    }

    /**
     * Sets the value of the excludeSuperclassListeners property.
     *
     * @param value allowed object is {@link EmptyType }
     *
     */
    public void setExcludeSuperclassListeners(EmptyType value) {
        this.excludeSuperclassListeners = value;
    }

    /**
     * Gets the value of the entityListeners property.
     *
     * @return possible object is {@link EntityListeners }
     *
     */
    public EntityListeners getEntityListeners() {
        return entityListeners;
    }

    /**
     * Sets the value of the entityListeners property.
     *
     * @param value allowed object is {@link EntityListeners }
     *
     */
    public void setEntityListeners(EntityListeners value) {
        this.entityListeners = value;
    }

    /**
     * Gets the value of the prePersist property.
     *
     * @return possible object is {@link PrePersist }
     *
     */
    public PrePersist getPrePersist() {
        return prePersist;
    }

    /**
     * Sets the value of the prePersist property.
     *
     * @param value allowed object is {@link PrePersist }
     *
     */
    public void setPrePersist(PrePersist value) {
        this.prePersist = value;
    }

    /**
     * Gets the value of the postPersist property.
     *
     * @return possible object is {@link PostPersist }
     *
     */
    public PostPersist getPostPersist() {
        return postPersist;
    }

    /**
     * Sets the value of the postPersist property.
     *
     * @param value allowed object is {@link PostPersist }
     *
     */
    public void setPostPersist(PostPersist value) {
        this.postPersist = value;
    }

    /**
     * Gets the value of the preRemove property.
     *
     * @return possible object is {@link PreRemove }
     *
     */
    public PreRemove getPreRemove() {
        return preRemove;
    }

    /**
     * Sets the value of the preRemove property.
     *
     * @param value allowed object is {@link PreRemove }
     *
     */
    public void setPreRemove(PreRemove value) {
        this.preRemove = value;
    }

    /**
     * Gets the value of the postRemove property.
     *
     * @return possible object is {@link PostRemove }
     *
     */
    public PostRemove getPostRemove() {
        return postRemove;
    }

    /**
     * Sets the value of the postRemove property.
     *
     * @param value allowed object is {@link PostRemove }
     *
     */
    public void setPostRemove(PostRemove value) {
        this.postRemove = value;
    }

    /**
     * Gets the value of the preUpdate property.
     *
     * @return possible object is {@link PreUpdate }
     *
     */
    public PreUpdate getPreUpdate() {
        return preUpdate;
    }

    /**
     * Sets the value of the preUpdate property.
     *
     * @param value allowed object is {@link PreUpdate }
     *
     */
    public void setPreUpdate(PreUpdate value) {
        this.preUpdate = value;
    }

    /**
     * Gets the value of the postUpdate property.
     *
     * @return possible object is {@link PostUpdate }
     *
     */
    public PostUpdate getPostUpdate() {
        return postUpdate;
    }

    /**
     * Sets the value of the postUpdate property.
     *
     * @param value allowed object is {@link PostUpdate }
     *
     */
    public void setPostUpdate(PostUpdate value) {
        this.postUpdate = value;
    }

    /**
     * Gets the value of the postLoad property.
     *
     * @return possible object is {@link PostLoad }
     *
     */
    public PostLoad getPostLoad() {
        return postLoad;
    }

    /**
     * Sets the value of the postLoad property.
     *
     * @param value allowed object is {@link PostLoad }
     *
     */
    public void setPostLoad(PostLoad value) {
        this.postLoad = value;
    }

    /**
     * Gets the value of the attributes property.
     *
     * @return possible object is {@link Attributes }
     *
     */
    public Attributes getAttributes() {
        if (attributes == null) {
            attributes = new Attributes();
        }
        return attributes;
    }

    /**
     * Sets the value of the attributes property.
     *
     * @param value allowed object is {@link Attributes }
     *
     */
    public void setAttributes(Attributes value) {
        this.attributes = value;
    }

    /**
     * Gets the value of the clazz property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getClazz() {
        return clazz;
    }

    /**
     * Sets the value of the clazz property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setClazz(String value) {
        this.clazz = value;
    }

    /**
     * Gets the value of the access property.
     *
     * @return possible object is {@link AccessType }
     *
     */
    public AccessType getAccess() {
        return access;
    }

    /**
     * Sets the value of the access property.
     *
     * @param value allowed object is {@link AccessType }
     *
     */
    public void setAccess(AccessType value) {
        this.access = value;
    }

    /**
     * Gets the value of the metadataComplete property.
     *
     * @return possible object is {@link Boolean }
     *
     */
    public Boolean isMetadataComplete() {
        return metadataComplete;
    }

    /**
     * Sets the value of the metadataComplete property.
     *
     * @param value allowed object is {@link Boolean }
     *
     */
    public void setMetadataComplete(Boolean value) {
        this.metadataComplete = value;
    }

    @Override
    public String getName() {
        return getClazz();
    }

    @Override
    public void setName(String name) {
        setClazz(name);
    }

    @Override
    public void setAttributes(IAttributes attributes) {
        this.attributes = (Attributes) attributes;
    }

    /**
     * @return the compositePrimaryKeyType
     */
    public CompositePrimaryKeyType getCompositePrimaryKeyType() {
        return compositePrimaryKeyType;
    }

    /**
     * @param compositePrimaryKeyType the compositePrimaryKeyType to set
     */
    public void setCompositePrimaryKeyType(CompositePrimaryKeyType compositePrimaryKeyType) {
        this.compositePrimaryKeyType = compositePrimaryKeyType;
        manageCompositePrimaryKeyClass();
    }

    /**
     * @return the compositePrimaryKeyClass
     */
    public String getCompositePrimaryKeyClass() {
        return compositePrimaryKeyClass;
    }

    /**
     * @param compositePrimaryKeyClass the compositePrimaryKeyClass to set
     */
    public void setCompositePrimaryKeyClass(String compositePrimaryKeyClass) {
        this.compositePrimaryKeyClass = compositePrimaryKeyClass;
        manageCompositePrimaryKeyClass();
    }

    public void manageCompositePrimaryKeyClass() {
        if (compositePrimaryKeyClass == null || compositePrimaryKeyClass.trim().isEmpty()) {
            compositePrimaryKeyClass = this.getClazz() + "PK";
        }
        if (this.getCompositePrimaryKeyType() == CompositePrimaryKeyType.EMBEDDEDID) {
            this.getAttributes().getEmbeddedId().setAttributeType(compositePrimaryKeyClass);
            this.idClass = null;
        } else if (this.getCompositePrimaryKeyType() == CompositePrimaryKeyType.IDCLASS) {
            this.idClass = new IdClass(compositePrimaryKeyClass);
        } else {
            this.idClass = null;
            compositePrimaryKeyClass = null;
            if (getCompositePrimaryKeyType() == null) {
                setCompositePrimaryKeyType(CompositePrimaryKeyType.NONE);
            }
        }
    }

}
